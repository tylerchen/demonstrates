<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.iff.demo</groupId>
	<artifactId>demonstrate-project</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<name>${project.artifactId}</name>
	<issueManagement>
	</issueManagement>
	<ciManagement>
	</ciManagement>
	<scm>
	</scm>
	<distributionManagement>
	</distributionManagement>
	<properties>
		<!-- the properties below need to reset in every project -->
		<local.repository.path>file://${project.basedir}/lib/</local.repository.path>
		<!-- end reset -->
		<!-- compile setting -->
		<source.compile.version>1.5</source.compile.version>
		<target.compile.version>1.5</target.compile.version>
		<!-- dependency version -->
		<dayatang.commons.version>2.5</dayatang.commons.version>
		<struts2.version>2.1.8.1</struts2.version>
		<struts2.jquery.version>3.3.0</struts2.jquery.version>
		<spring.version>3.0.3.RELEASE</spring.version>
		<spring.security.version>3.0.2.RELEASE</spring.security.version>
		<hibernate.validator.version>4.0.2.GA</hibernate.validator.version>
		<quartz.groupId>opensymphony</quartz.groupId>
		<quartz.artifactId>quartz-all</quartz.artifactId>
		<quartz.version>1.6.3</quartz.version>
		<aspectj.version>1.6.7</aspectj.version>
		<jstl.taglibs.version>1.2</jstl.taglibs.version>
		<jsp.api.version>2.1</jsp.api.version>
		<servlet.version>2.5</servlet.version>
		<slf4j.version>1.6.0</slf4j.version>
		<displaytag.version>1.2</displaytag.version>
		<commons.lang.version>2.5</commons.lang.version>
		<commons.configuration.version>1.6</commons.configuration.version>
		<commons.collections.version>3.2.1</commons.collections.version>
		<commons.net.version>2.0</commons.net.version>
		<velocity.version>1.6.4</velocity.version>
		<velocity.tools.version>2.0</velocity.tools.version>
		<mina.version>1.1.7</mina.version>
		<freemarker.version>2.3.16</freemarker.version>
		<c3p0.version>0.9.1.2</c3p0.version>
		<ojdbc14.version>10.2.0.4.0</ojdbc14.version>
		<mysql.version>5.1.14</mysql.version>
		<proxool.version>0.9.1</proxool.version>
		<json.lib.version>2.2.3</json.lib.version>
		<gson.version>2.1</gson.version>
		<fastjson.version>1.1.17</fastjson.version>
		<wsdl4j.version>1.6.2</wsdl4j.version>
		<cxf.version>2.3.3-patch-01</cxf.version>
		<jaxws.api.version>2.2.6</jaxws.api.version>
		<jackson.version>1.9.2</jackson.version>
		<jsr311.version>1.0</jsr311.version>
		<jsr181.version>1.0-MR1</jsr181.version>
		<httpclient.version>4.0-beta2</httpclient.version>
		<fastinfoset.version>1.2.7</fastinfoset.version>
		<neethi.version>2.0.4</neethi.version>
		<!-- end dependency version -->

		<!-- project configure -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- end project configure -->
	</properties>
	<repositories>
		<repository>
			<id>dayatang.nexus.release</id>
			<name>Dayatang release repository</name>
			<url>http://www.dayatang.com:8080/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<id>JBoss Repo</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
		</repository>
		<repository>
			<id>spring-maven-release</id>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>spring-roo-repository</id>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</repository>
		<repository>
			<id>spy</id>
			<name>Spy Repository</name>
			<layout>default</layout>
			<url>http://files.couchbase.com/maven2/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>audaxis</id>
			<url>http://support.audaxis.com/maven2/</url>
		</repository>
		<repository>
			<id>basedir</id>
			<url>${local.repository.path}</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-maven-release</id>
			<url>http://maven.springframework.org/release</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-maven-milestone</id>
			<url>http://maven.springframework.org/milestone</url>
		</pluginRepository>
		<pluginRepository>
			<id>spring-roo-repository</id>
			<url>http://spring-roo-repository.springsource.org/release</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<source>${source.compile.version}</source>
						<target>${target.compile.version}</target>
						<fork>true</fork>
						<meminitial>128m</meminitial>
						<maxmem>256m</maxmem>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.7</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.8</version>
					<configuration>
						<excludes>
							<exclude>**/SystemSQLTest.java</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<index>false</index>
							<manifest>
								<addClasspath>false</addClasspath>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Project-Name>${project.name}</Project-Name>
								<Project-Version>${project.version}</Project-Version>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<svnrevision>${svnrevision}</svnrevision>
								<cvstimestamp>${cvstimestamp}</cvstimestamp>
								<cctimestamp>${cctimestamp}</cctimestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<archive>
							<addMavenDescriptor>false</addMavenDescriptor>
							<index>false</index>
							<manifest>
								<addClasspath>false</addClasspath>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Project-Name>${project.name}</Project-Name>
								<Project-Version>${project.version}</Project-Version>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<svnrevision>${svnrevision}</svnrevision>
								<cvstimestamp>${cvstimestamp}</cvstimestamp>
								<cctimestamp>${cctimestamp}</cctimestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>7.0.1.v20091125</version>
					<configuration>
						<webAppConfig>
							<defaultsDescriptor>src/test/resources/webdefault.xml</defaultsDescriptor>
							<contextPath>/</contextPath>
						</webAppConfig>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>native2ascii-maven-plugin</artifactId>
					<version>1.0-alpha-1</version>
					<configuration>
						<dest>target/classes</dest>
						<src>src/main/resources</src>
					</configuration>
					<executions>
						<execution>
							<id>native2ascii-utf8</id>
							<goals>
								<goal>native2ascii</goal>
							</goals>
							<configuration>
								<encoding>UTF-8</encoding>
								<includes>*_*.properties</includes>
							</configuration>
						</execution>
						<execution>
							<id>native2ascii-8859_1</id>
							<goals>
								<goal>native2ascii</goal>
							</goals>
							<configuration>
								<encoding>8859_1</encoding>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>hibernate3-maven-plugin</artifactId>
					<version>3.0</version>
					<configuration>
						<components>
							<component>
								<name>hbm2ddl</name>
								<implementation>annotationconfiguration</implementation>
							</component>
						</components>
						<componentProperties>
							<update>true</update>
							<create>true</create>
							<jdk5>true</jdk5>
							<configurationfile>target/test-classes/hibernate.cfg.xml</configurationfile>
							<propertyfile>target/test-classes/hibernate.properties
							</propertyfile>
							<skip>${h3.hbm2ddl.skip}</skip>
						</componentProperties>
					</configuration>
					<executions>
						<execution>
							<phase>test-compile</phase>
							<goals>
								<goal>hbm2ddl</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>${jdbc.groupId}</groupId>
							<artifactId>${jdbc.artifactId}</artifactId>
							<version>${jdbc.version}</version>
						</dependency>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-api</artifactId>
							<version>${slf4j.version}</version>
						</dependency>
						<dependency>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-log4j12</artifactId>
							<version>${slf4j.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>sql-maven-plugin</artifactId>
					<version>1.5</version>
					<configuration>
						<username>${jdbc.username}</username>
						<password>${jdbc.password}</password>
						<url>${jdbc.url}</url>
						<driver>${jdbc.driverClassName}</driver>
						<encoding>UTF-8</encoding>
					</configuration>
					<executions>
						<execution>
							<id>insert-module-product-data</id>
							<phase>compile</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>${database-url-prefix}${database-name}?characterEncoding=UTF-8</url>
								<autocommit>true</autocommit>
								<srcFiles>
									<srcFile>src/main/resources/dataset/product-data.sql</srcFile>
								</srcFiles>
								<skip>${product.sql.skip}</skip>
							</configuration>
						</execution>
						<execution>
							<id>drop-db-before-test-if-any</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>${database-url-prefix}</url>
								<autocommit>true</autocommit>
								<sqlCommand>DROP DATABASE IF EXISTS ${database-name}</sqlCommand>
								<onError>continue</onError>
								<skip>${drop.and.create.db.skip}</skip>
							</configuration>
						</execution>
						<execution>
							<id>create-db</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>${database-url-prefix}</url>
								<autocommit>true</autocommit>
								<sqlCommand>CREATE DATABASE ${database-name} CHARSET UTF8</sqlCommand>
								<skip>${drop.and.create.db.skip}</skip>
							</configuration>
						</execution>
						<execution>
							<id>create-schema</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>execute</goal>
							</goals>
							<configuration>
								<url>${database-url-prefix}${database-name}?characterEncoding=UTF-8</url>
								<autocommit>true</autocommit>
								<srcFiles>
									<srcFile>${my.global.sql}</srcFile>
								</srcFiles>
								<skip>true</skip>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>${jdbc.groupId}</groupId>
							<artifactId>${jdbc.artifactId}</artifactId>
							<version>${jdbc.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>dbunit-maven-plugin</artifactId>
					<version>1.0-beta-3</version>
					<configuration>
						<dataTypeFactoryName>${dbunit.dataTypeFactoryName}</dataTypeFactoryName>
						<driver>${jdbc.driverClassName}</driver>
						<username>${jdbc.username}</username>
						<password>${jdbc.password}</password>
						<url>${jdbc.url}</url>
						<type>${dbunit.operation.type}</type>
						<schema>${dbunit.schema}</schema>
					</configuration>
					<executions>
						<execution>
							<id>insert-test-data</id>
							<phase>test-compile</phase>
							<goals>
								<goal>operation</goal>
							</goals>
							<configuration>
								<src>src/test/resources/dataset/sample-data.xml</src>
								<skip>${simple.data.skip}</skip>
								<format>${simple.data.format}</format>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>${jdbc.groupId}</groupId>
							<artifactId>${jdbc.artifactId}</artifactId>
							<version>${jdbc.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencyManagement>
		<dependencies>
			<!-- common dependency commons, log etc. -->
			<!-- log4j -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<!-- apache commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons.lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons.collections.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${commons.net.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpclient.version}</version>
			</dependency>
			<!-- J2EE dependency -->
			<!-- servlet and jsp -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.taglibs.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>taglibs</groupId>
				<artifactId>standard</artifactId>
				<version>${jstl.taglibs.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.ejb</groupId>
				<artifactId>ejb-api</artifactId>
				<version>3.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.1</version>
			</dependency>
			<!-- WEB dependency -->
			<dependency>
				<groupId>displaytag</groupId>
				<artifactId>displaytag</artifactId>
				<version>${displaytag.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>jcl104-over-slf4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>net.sf.json-lib</groupId>
				<artifactId>json-lib</artifactId>
				<classifier>jdk15</classifier>
				<version>${json.lib.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- dayatang -->
			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-spring</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-spring-test</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-domain</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-db</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>
			<dependency>
				<groupId>com.dayatang.commons</groupId>
				<artifactId>dayatang-commons-i18n</artifactId>
				<version>${dayatang.commons.version}</version>
			</dependency>
			<!-- struts framework -->
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-core</artifactId>
				<version>${struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-spring-plugin</artifactId>
				<version>${struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-json-plugin</artifactId>
				<version>${struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.struts</groupId>
				<artifactId>struts2-convention-plugin</artifactId>
				<version>${struts2.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jgeppert.struts2.jquery</groupId>
				<artifactId>struts2-jquery-plugin</artifactId>
				<version>${struts2.jquery.version}</version>
			</dependency>
			<!-- spring framework -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>
			<!-- spring security framework -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-core-tiger</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-taglibs</artifactId>
				<version>${spring.security.version}</version>
			</dependency>
			<dependency>
				<groupId>${quartz.groupId}</groupId>
				<artifactId>${quartz.artifactId}</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<!-- hibernate framework -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate.validator.version}</version>
			</dependency>
			<!-- aspectJ -->
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjtools</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<!-- mina -->
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-core</artifactId>
				<version>${mina.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-filter-ssl</artifactId>
				<version>${mina.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.mina</groupId>
				<artifactId>mina-integration-spring</artifactId>
				<version>${mina.version}</version>
			</dependency>
			<!-- jdbc -->
			<dependency>
				<groupId>proxool</groupId>
				<artifactId>proxool</artifactId>
				<version>${proxool.version}</version>
			</dependency>
			<dependency>
				<groupId>proxool</groupId>
				<artifactId>proxool-cglib</artifactId>
				<version>${proxool.version}</version>
			</dependency>
			<dependency>
				<groupId>c3p0</groupId>
				<artifactId>c3p0</artifactId>
				<version>${c3p0.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle</groupId>
				<artifactId>ojdbc14</artifactId>
				<version>${ojdbc14.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>
			<!-- velocity and freemarker -->
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity-tools</artifactId>
				<version>${velocity.tools.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>${velocity.version}</version>
			</dependency>
			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>
			<!-- webservice cxf -->
			<dependency>
				<groupId>wsdl4j</groupId>
				<artifactId>wsdl4j</artifactId>
				<version>${wsdl4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-core</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.ws</groupId>
				<artifactId>jaxws-api</artifactId>
				<version>${jaxws.api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-bindings-soap</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<!-- This dependency is needed if you're using the Jetty container -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-jdk14</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>jsr311-api</artifactId>
				<version>${jsr311.version}</version>
			</dependency>
			<dependency>
				<groupId>com.sun.xml.fastinfoset</groupId>
				<artifactId>FastInfoset</artifactId>
				<version>${fastinfoset.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.neethi</groupId>
				<artifactId>neethi</artifactId>
				<version>${neethi.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.jws</groupId>
				<artifactId>jsr181-api</artifactId>
				<version>${jsr181.version}</version>
			</dependency>
			<!-- memcached -->
			<dependency>
				<groupId>com.googlecode</groupId>
				<artifactId>hibernate-memcached</artifactId>
				<version>1.2.2</version>
			</dependency>
			<dependency>
				<groupId>net</groupId>
				<artifactId>spy</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>spy</groupId>
				<artifactId>spymemcached</artifactId>
				<version>2.6</version>
			</dependency>
			<!-- xml parser -->
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.9.1</version>
			</dependency>
			<!-- for test -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.6</version>
			</dependency>
			<dependency>
				<groupId>org.dbunit</groupId>
				<artifactId>dbunit</artifactId>
				<version>2.4.7</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymock</artifactId>
				<version>2.3</version>
			</dependency>
			<dependency>
				<groupId>org.easymock</groupId>
				<artifactId>easymockclassextension</artifactId>
				<version>2.2.2</version>
			</dependency>
			<dependency>
				<groupId>org.iff</groupId>
				<artifactId>jbossall-client</artifactId>
				<version>4.2.3GA</version>
				<scope>test</scope>
			</dependency>
			<!-- redhat plugin -->
			<dependency>
				<groupId>com.redhat</groupId>
				<artifactId>redhat-auth-ejb-support</artifactId>
				<version>${redhat.auth.version}</version>
			</dependency>
			<dependency>
				<groupId>com.redhat</groupId>
				<artifactId>redhat-auth-ejb-interface</artifactId>
				<version>${redhat.auth.version}</version>
			</dependency>
			<dependency>
				<groupId>com.redhat</groupId>
				<artifactId>redhat-auth-security</artifactId>
				<version>${redhat.auth.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-tx</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-asm</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-web</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-aop</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-webmvc</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.redhat</groupId>
				<artifactId>struts2-redwork-plugin</artifactId>
				<version>${redhat.auth.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.hibernate</groupId>
						<artifactId>hibernate-validator</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<modules>
		<module>dddlib-allinone-project</module>
		<module>common-project</module>
		<module>ddd-spring-jpa-webservice</module>
		<module>stripes-spring-jpa</module>
		<module>bootsrap-sample</module>
		<module>dddlib3</module>
		<!--<module>ddd-auth-project</module>-->
		<module>dddlib3-JSH</module>
	</modules>
</project>